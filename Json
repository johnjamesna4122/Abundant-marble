{ "openapi": "3.0.0", "info": { "title": "INBOX.EU API", "description": "API documentation and online sandbox to manage custom domain mailboxes. Contact <a href='mailto:support@inbox.eu'>support@inbox.eu</a> for any questions about the API usage. API keys can be generated by creating admin account in <a href='https://www.inbox.eu/signup/business'>https://www.inbox.eu</a><br> <p>Full description about Inbox.eu API here: <a href='https://help.inbox.eu/?keyword=euapi_about'>https://help.inbox.eu/?keyword=euapi_about</a></p> <p>OpenApi 3.0 API documentation in JSON format is available here: <a href='https://api.inbox.eu/api/v1/doc.json'>https://api.inbox.eu/api/v1/doc.json</a></p> <p>You need to pass <b>Authorization: Bearer your_api_key_here</b> header with Your api key as value and additionally if You have body contents in Your request You need to pass <b>Content-Type: application/json</b> header. You can check API sandbox what data is passed to each endpoint and what is in response</p> <p>To use sandbox click <b>Authorize</b> button and enter your api key in value field to use all API endpoints</p> ", "version": "1.0.0" }, "paths": { "/api/v1/security/check": { "get": { "tags": [ "Security" ], "summary": "Checks if user is still authenticated", "operationId": "get_v1_security_check", "responses": { "200": { "description": "Request have to have 'Authorization' header with valid value\n in format: Bearer {yourToken}", "content": { "application/json": { "schema": { "properties": { "data": { "type": "array", "items": { "properties": {} } } }, "type": "object" } } } }, "401": { "description": "Form validation error", "content": { "application/json": { "schema": { "properties": { "error": { "type": "string" }, "errorMessages": { "type": "array", "items": { "type": "string" } } }, "type": "object" } } } } }, "security": [ { "Bearer": [] } ] } }, "/api/v1/domain_admins/": { "post": { "tags": [ "Domain Admin" ], "summary": "Create new admin user with domain name", "operationId": "post_v1_domain_admin_create", "requestBody": { "description": "Create new domain admin. isEmailVerified is available only for specific clients.\n password is not required- if not provided it will be auto-generated and sent to domain admin e-mail.\n API key is required to use this endpoint.", "required": true, "content": { "application/json": { "schema": { "$ref": "#/components/schemas/DomainAdminCreateForm" } } } }, "responses": { "201": { "description": "Successfully created domain admin", "content": { "application/json": { "schema": { "properties": { "data": { "type": "array", "items": { "properties": {} } } }, "type": "object" } } } }, "400": { "description": "Form validation error", "content": { "application/json": { "schema": { "properties": { "error": { "type": "string" }, "errorMessages": { "type": "array", "items": { "type": "string" } } }, "type": "object" } } } }, "422": { "description": "Form validation error", "content": { "application/json": { "schema": { "properties": { "error": { "type": "string" }, "errorMessages": { "type": "array", "items": { "type": "string" } } }, "type": "object" } } } } }, "security": [ { "Bearer": [] } ] } }, "/api/v1/me/": { "get": { "tags": [ "Me" ], "summary": "Get my personal info", "operationId": "get_v1_logged_domain_admin_get", "responses": { "200": { "description": "Returned when successful", "content": { "application/json": { "schema": { "properties": { "data": { "$ref": "#/components/schemas/DomainAdmin" } }, "type": "object" } } } }, "403": { "description": "Form validation error", "content": { "application/json": { "schema": { "properties": { "error": { "type": "string" }, "errorMessages": { "type": "array", "items": { "type": "string" } } }, "type": "object" } } } } }, "security": [ { "Bearer": [] } ] }, "put": { "tags": [ "Me" ], "summary": "Update my personal info", "operationId": "put_v1_logged_domain_admin_put", "requestBody": { "required": true, "content": { "application/json": { "schema": { "$ref": "#/components/schemas/DomainAdminUpdateForm" } } } }, "responses": { "200": { "description": "Successfully updated personal info", "content": { "application/json": { "schema": { "properties": { "data": { "$ref": "#/components/schemas/DomainAdminToken" } }, "type": "object" } } } }, "422": { "description": "Form validation error", "content": { "application/json": { "schema": { "properties": { "error": { "type": "string" }, "errorMessages": { "type": "array", "items": { "type": "string" } } }, "type": "object" } } } } }, "security": [ { "Bearer": [] } ] }, "delete": { "tags": [ "Domain Admin", "Me" ], "summary": "Delete domain admin account", "operationId": "delete_v1_logged_domain_admin_delete_account", "responses": { "200": { "description": "Successfully deleted my admin account", "content": { "application/json": { "schema": { "properties": { "data": { "type": "boolean" } }, "type": "object" } } } } }, "security": [ { "Bearer": [] } ] } }, "/api/v1/me/two_factor/": { "get": { "tags": [ "2FA auth" ], "summary": "Get 2FA info", "operationId": "get_v1_logged_domain_admin_two_factor_get", "responses": { "200": { "description": "Returned when successful", "content": { "application/json": { "schema": { "properties": { "data": { "$ref": "#/components/schemas/TwoFactorUserData" } }, "type": "object" } } } } }, "security": [ { "Bearer": [] } ] }, "post": { "tags": [ "2FA auth" ], "summary": "Enable 2FA for domain admin", "operationId": "post_v1_logged_domain_admin_two_factor_create", "responses": { "201": { "description": "Returned when successful", "content": { "application/json": { "schema": { "properties": { "data": { "$ref": "#/components/schemas/TwoFactorUserData" } }, "type": "object" } } } }, "400": { "description": "Form validation error", "content": { "application/json": { "schema": { "properties": { "error": { "type": "string" }, "errorMessages": { "type": "array", "items": { "type": "string" } } }, "type": "object" } } } } }, "security": [ { "Bearer": [] } ] }, "delete": { "tags": [ "2FA auth" ], "summary": "Disable 2FA for domain admin", "operationId": "delete_v1_logged_domain_admin_two_factor_delete", "responses": { "200": { "description": "Returned when successful", "content": { "application/json": { "schema": { "properties": { "data": { "type": "array", "items": { "properties": {} } } }, "type": "object" } } } }, "400": { "description": "Form validation error", "content": { "application/json": { "schema": { "properties": { "error": { "type": "string" }, "errorMessages": { "type": "array", "items": { "type": "string" } } }, "type": "object" } } } } }, "security": [ { "Bearer": [] } ] } }, "/api/v1/domains/{domainName}/mail_users/{userId}": { "get": { "tags": [ "Mailbox users" ], "summary": "Get mailbox user by id", "operationId": "get_v1_mail_users_get", "parameters": [ { "name": "domainName", "in": "path", "required": true, "schema": { "type": "string" } }, { "name": "userId", "in": "path", "required": true, "schema": { "type": "string" } } ], "responses": { "200": { "description": "Returned when successful", "content": { "application/json": { "schema": { "properties": { "data": { "type": "array", "items": { "properties": {} } } }, "type": "object" } } } } }, "security": [ { "Bearer": [] } ] }, "put": { "tags": [ "Mailbox users" ], "summary": "Update mail user", "operationId": "put_v1_mail_users_update", "parameters": [ { "name": "domainName", "in": "path", "required": true, "schema": { "type": "string" } }, { "name": "userId", "in": "path", "required": true, "schema": { "type": "string" } } ], "requestBody": { "required": true, "content": { "application/json": { "schema": { "$ref": "#/components/schemas/ApiMailUser" } } } }, "responses": { "200": { "description": "Successfully updated mailbox user", "content": { "application/json": { "schema": { "properties": { "data": { "type": "array", "items": { "properties": {} } } }, "type": "object" } } } }, "400": { "description": "Form validation error", "content": { "application/json": { "schema": { "properties": { "error": { "type": "string" }, "errorMessages": { "type": "array", "items": { "type": "string" } } }, "type": "object" } } } } }, "security": [ { "Bearer": [] } ] }, "delete": { "tags": [ "Mailbox users" ], "summary": "Delete mail user", "operationId": "delete_v1_mail_users_delete", "parameters": [ { "name": "domainName", "in": "path", "required": true, "schema": { "type": "string" } }, { "name": "userId", "in": "path", "required": true, "schema": { "type": "string" } } ], "responses": { "200": { "description": "Successfully deleted mailbox user", "content": { "application/json": { "schema": { "properties": { "data": { "type": "boolean" } }, "type": "object" } } } } }, "security": [ { "Bearer": [] } ] } }, "/api/v1/domains/{domainName}/mail_users/multi": { "post": { "tags": [ "Mailbox users" ], "summary": "Create multiple e-mail accounts at once", "operationId": "post_v1_mail_users_create_multi", "parameters": [ { "name": "domainName", "in": "path", "required": true, "schema": { "type": "string" } } ], "requestBody": { "required": true, "content": { "application/json": { "schema": { "type": "array", "items": { "$ref": "#/components/schemas/ApiMailUser" } } } } }, "responses": { "200": { "description": "Successfully created mailbox users", "content": { "application/json": { "schema": { "properties": { "data": { "type": "array", "items": { "properties": {} } } }, "type": "object" } } } } }, "security": [ { "Bearer": [] } ] } }, "/api/v1/domains/{domainName}/mail_users/{userId}/impersonation/impersonate": { "post": { "tags": [ "Mailbox users" ], "summary": "Create impersonation token which can be used to login to mailbox user", "operationId": "post_v1_mail_users_impersonation_impersonate", "parameters": [ { "name": "domainName", "in": "path", "required": true, "schema": { "type": "string" } }, { "name": "userId", "in": "path", "required": true, "schema": { "type": "string" } } ], "requestBody": { "required": true, "content": { "application/json": { "schema": { "$ref": "#/components/schemas/ApiMailUser" } } } }, "responses": { "201": { "description": "Successfully created mailbox user", "content": { "application/json": { "schema": { "properties": { "data": { "type": "array", "items": { "properties": {} } } }, "type": "object" } } } }, "400": { "description": "Form validation error", "content": { "application/json": { "schema": { "properties": { "error": { "type": "string" }, "errorMessages": { "type": "array", "items": { "type": "string" } } }, "type": "object" } } } } }, "security": [ { "Bearer": [] } ] } }, "/api/v1/domains/{domainName}/mail_users/{userId}/impersonation/validate": { "post": { "tags": [ "Mailbox users" ], "summary": "Check if impersonation token is valid", "operationId": "post_v1_mail_users_impersonation_validate", "parameters": [ { "name": "impersonationToken", "in": "query", "required": true, "schema": { "type": "string" } }, { "name": "domainName", "in": "path", "required": true, "schema": { "type": "string" } }, { "name": "userId", "in": "path", "required": true, "schema": { "type": "string" } } ], "requestBody": { "required": true, "content": { "application/json": { "schema": { "$ref": "#/components/schemas/ApiMailUser" } } } }, "responses": { "200": { "description": "Returned when successful", "content": { "application/json": { "schema": { "properties": { "data": { "type": "array", "items": { "properties": {} } } }, "type": "object" } } } }, "400": { "description": "Form validation error", "content": { "application/json": { "schema": { "properties": { "error": { "type": "string" }, "errorMessages": { "type": "array", "items": { "type": "string" } } }, "type": "object" } } } } }, "security": [ { "Bearer": [] } ] } }, "/api/v1/domains/{domainName}/mail_users/{userId}/details": { "post": { "tags": [ "Send details for mailbox users" ], "summary": "Send details of created/updated mailbox user to another e-mail", "operationId": "post_v1_mail_users_send_details", "parameters": [ { "name": "domainName", "in": "path", "required": true, "schema": { "type": "string" } }, { "name": "userId", "in": "path", "required": true, "schema": { "type": "string" } } ], "requestBody": { "required": true, "content": { "application/json": { "schema": { "$ref": "#/components/schemas/MailUserDetails" } } } }, "responses": { "200": { "description": "Successfully sent user details to another e-mail", "content": { "application/json": { "schema": { "properties": { "data": { "type": "array", "items": { "properties": {} } } }, "type": "object" } } } }, "400": { "description": "Form validation error", "content": { "application/json": { "schema": { "properties": { "error": { "type": "string" }, "errorMessages": { "type": "array", "items": { "type": "string" } } }, "type": "object" } } } }, "422": { "description": "Form validation error", "content": { "application/json": { "schema": { "properties": { "error": { "type": "string" }, "errorMessages": { "type": "array", "items": { "type": "string" } } }, "type": "object" } } } } }, "security": [ { "Bearer": [] } ] } }, "/api/v1/domains/{domainName}/mail_users/{userId}/filters": { "put": { "tags": [ "Filter" ], "summary": "Update mail user filters", "operationId": "put_v1_mail_users_filters_update", "parameters": [ { "name": "domainName", "in": "path", "required": true, "schema": { "type": "string" } }, { "name": "userId", "in": "path", "required": true, "schema": { "type": "string" } } ], "responses": { "200": { "description": "Returned when successful", "content": { "application/json": { "schema": { "properties": { "data": { "type": "array", "items": { "properties": {} } } }, "type": "object" } } } } } } }, "/api/v1/domains/{domainName}/domain_admins/{domainAdmin}": { "get": { "tags": [ "Domain Admin" ], "summary": "Get domain admin", "operationId": "get_v1_domain_name_admin_get", "parameters": [ { "name": "domainName", "in": "path", "required": true, "schema": { "type": "string" } }, { "name": "domainAdmin", "in": "path", "required": true, "schema": { "type": "string" } } ], "responses": { "200": { "description": "Returned when successful", "content": { "application/json": { "schema": { "properties": { "data": { "$ref": "#/components/schemas/DomainAdmin" } }, "type": "object" } } } } }, "security": [ { "Bearer": [] } ] }, "delete": { "tags": [ "Domain Admin" ], "summary": "Remove access for domain admin to domain name", "operationId": "delete_v1_domain_name_admin_delete", "parameters": [ { "name": "domainName", "in": "path", "required": true, "schema": { "type": "string" } }, { "name": "domainAdmin", "in": "path", "required": true, "schema": { "type": "string" } } ], "responses": { "200": { "description": "Returned when successful", "content": { "application/json": { "schema": { "properties": { "data": { "type": "array", "items": { "properties": {} } } }, "type": "object" } } } } }, "security": [ { "Bearer": [] } ] } }, "/api/v1/domains/{domainName}/transactions/": { "get": { "tags": [ "Invoices" ], "summary": "List invoices for domain", "operationId": "get_v1_transaction_list", "parameters": [ { "name": "unexpired", "in": "query", "required": false, "schema": { "type": "string" } }, { "name": "order_column", "in": "query", "required": false, "schema": { "type": "string" } }, { "name": "order_direction", "in": "query", "required": false, "schema": { "type": "string" } }, { "name": "limit", "in": "query", "required": false, "schema": { "type": "integer" } }, { "name": "offset", "in": "query", "required": false, "schema": { "type": "integer" } }, { "name": "domainName", "in": "path", "required": true, "schema": { "type": "string" } } ], "responses": { "200": { "description": "Returned when successful", "content": { "application/json": { "schema": { "properties": { "data": { "type": "array", "items": { "$ref": "#/components/schemas/BizTransaction" } } }, "type": "object" } } } } }, "security": [ { "Bearer": [] } ] } }, "/api/v1/domain_find/{hostName}": { "get": { "tags": [ "Domain Find" ], "summary": "Check if domain already exists in DB", "operationId": "get_v1_domain_find_get", "parameters": [ { "name": "hostName", "in": "path", "required": true, "schema": { "type": "string" } } ], "responses": { "404": { "description": "Domain not found (it means it is available)", "content": { "application/json": { "schema": { "properties": { "data": { "type": "array", "items": { "properties": {} } } }, "type": "object" } } } }, "409": { "description": "Domain already used", "content": { "application/json": { "schema": { "properties": { "error": { "type": "string" }, "errorMessages": { "type": "array", "items": { "type": "string" } } }, "type": "object" } } } } }, "security": [ { "Bearer": [] } ] } }, "/api/v1/emails/admin": { "get": { "tags": [ "Email" ], "summary": "Check if admin e-mail is already used", "operationId": "get_v1_email_checker_admin_mail", "parameters": [ { "name": "email", "in": "query", "required": true, "schema": { "type": "string" } } ], "responses": { "200": { "description": "If email exists (not available)", "content": { "application/json": { "schema": { "properties": { "data": { "type": "array", "items": { "properties": {} } } }, "type": "object" } } } }, "422": { "description": "If email doesn't exist (email available)", "content": { "application/json": { "schema": { "properties": { "error": { "type": "string" }, "errorMessages": { "type": "array", "items": { "type": "string" } } }, "type": "object" } } } }, "404": { "description": "Form validation error", "content": { "application/json": { "schema": { "properties": { "error": { "type": "string" }, "errorMessages": { "type": "array", "items": { "type": "string" } } }, "type": "object" } } } } }, "security": [ { "Bearer": [] } ] } }, "/api/v1/invite/": { "post": { "tags": [ "Invite" ], "summary": "Invite new domain admin to manage provided domain", "operationId": "post_v1_domain_admin_invite", "requestBody": { "required": true, "content": { "application/json": { "schema": { "$ref": "#/components/schemas/InviteForm" } } } }, "responses": { "200": { "description": "Successfully invited admin", "content": { "application/json": { "schema": { "properties": { "data": { "type": "array", "items": { "properties": {} } } }, "type": "object" } } } }, "422": { "description": "Form validation error", "content": { "application/json": { "schema": { "properties": { "error": { "type": "string" }, "errorMessages": { "type": "array", "items": { "type": "string" } } }, "type": "object" } } } } }, "security": [ { "Bearer": [] } ] } } }, "components": { "schemas": { "DomainAdminCreateForm": { "required": [ "domainName", "email", "language" ], "properties": { "domainName": { "$ref": "#/components/schemas/DomainNameForm" }, "email": { "type": "string" }, "firstName": { "type": "string" }, "lastName": { "type": "string" }, "password": { "description": "Not required. If not provided auto-generated password will be sent to admin in welcome e-mail", "type": "string", "format": "password" }, "language": { "type": "string", "enum": [ "en", "lv", "ru", "bd", "pk", "id", "es", "lt", "ee", "fr", "de", "ar" ] }, "isEmailVerified": { "description": " isEmailVerified is available only for specific clients", "type": "boolean", "enum": [ true, false ] }, "euRefId": { "description": "domain admin from which referred this user", "type": "string", "format": "Inbox\\EuModel\\Entity\\Mail\\DomainAdmin id" } }, "type": "object" }, "DomainAdmin": { "required": [ "id", "email", "registered" ], "properties": { "id": { "type": "integer" }, "username": { "type": "string", "nullable": true }, "email": { "type": "string" }, "firstName": { "type": "string", "nullable": true }, "lastName": { "type": "string", "nullable": true }, "registered": { "type": "string", "format": "date-time" }, "createdBy": { "type": "string", "nullable": true }, "role": { "type": "string", "default": "ROLE_ADMIN" } }, "type": "object" }, "DomainAdminUpdateForm": { "properties": { "language": { "type": "string", "enum": [ "en", "lv", "ru", "bd", "pk", "id", "es", "lt", "ee", "fr", "de", "ar" ] }, "firstName": { "type": "string" }, "lastName": { "type": "string" }, "plainPassword": { "type": "string", "format": "password" }, "tos": { "description": "Mark that TOS is accepted", "type": "boolean", "enum": [ true ] } }, "type": "object" }, "DomainAdminToken": { "type": "object" }, "TwoFactorUserData": { "properties": { "secret": { "type": "string", "nullable": true }, "qrCodeImage": { "type": "string", "nullable": true }, "isEnabled": { "type": "boolean", "default": false } }, "type": "object" }, "ApiMailUser": { "type": "object" }, "MailUserDetails": { "type": "object" }, "BizTransaction": { "required": [ "orderId", "payer", "payerDomain", "domainId", "created", "start", "finish", "quota", "quotaTotal", "invoiceNumber", "sum", "currency", "apiKey", "productName" ], "properties": { "orderId": { "type": "integer" }, "payer": { "type": "string" }, "payerDomain": { "type": "string" }, "domainId": { "type": "integer" }, "created": { "type": "string", "format": "date-time" }, "start": { "type": "string", "format": "date-time" }, "finish": { "type": "string", "format": "date-time" }, "quota": { "type": "integer" }, "quotaTotal": { "type": "integer" }, "invoiceNumber": { "type": "string" }, "sum": { "type": "string" }, "currency": { "type": "string" }, "apiKey": { "type": "string" }, "isRecurrent": { "type": "boolean", "default": false }, "productName": { "type": "string" } }, "type": "object" }, "InviteForm": { "required": [ "email", "user", "hostname" ], "properties": { "email": { "type": "string" }, "user": { "type": "string" }, "hostname": { "type": "string" } }, "type": "object" }, "DomainNameForm": { "required": [ "name" ], "properties": { "name": { "type": "string" }, "mailboxUsernames": { "description": "list of usernames of mailboxes to create together with domain name", "type": "array", "items": { "type": "string" } } }, "type": "object" } }, "securitySchemes": { "Bearer": { "type": "http", "description": "Authorization: Bearer {token}", "in": "header", "scheme": "bearer" } } }, "security": [ { "Bearer": [] } ], "tags": [ { "name": "Security" }, { "name": "Domain Admin" }, { "name": "Me" }, { "name": "2FA auth" }, { "name": "Mailbox users" }, { "name": "Send details for mailbox users" }, { "name": "Filter" }, { "name": "Invoices" }, { "name": "Domain Find" }, { "name": "Email" }, { "name": "Invite" } ] }
